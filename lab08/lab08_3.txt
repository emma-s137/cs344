1. The FTRL scales the learning rate differently for different coefficients.
2. The bucket/binning feature is useful for simplifying data, and it could be useful to
separately train based on different subgroups when significant variation in the data is present.
3.

I.


  # Divide latitude into 10 buckets.
  bucketized_latitude = tf.feature_column.bucketized_column(
    latitude, boundaries=get_quantile_based_boundaries(
      training_examples["latitude"], 10))

  # Divide housing_median_age into 7 buckets.
  bucketized_housing_median_age = tf.feature_column.bucketized_column(
    housing_median_age, boundaries=get_quantile_based_boundaries(
      training_examples["housing_median_age"], 7))

  # Divide median_income into 7 buckets.
  bucketized_median_income = tf.feature_column.bucketized_column(
    median_income, boundaries=get_quantile_based_boundaries(
      training_examples["median_income"], 7))

  # Divide rooms_per_person into 7 buckets.
  bucketized_rooms_per_person = tf.feature_column.bucketized_column(
    rooms_per_person, boundaries=get_quantile_based_boundaries(
      training_examples["rooms_per_person"], 7))

Original: period 09 : 175.5
Bucket: period 09 : 88.30
Yes, bucketing makes sense as you can see from the improvement.

II.

long_x_lat = tf.feature_column.crossed_column(
  set([bucketized_longitude, bucketized_latitude]), hash_bucket_size=1000)

The feature cross of the latitude and longitude is very useful because as coordinate these features are not independent
of each other, but they are normally treated as such.
